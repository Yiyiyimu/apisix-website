(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{169:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(8),r=(n(0),n(265)),l={title:"How to build Apache APISIX"},o={unversionedId:"how-to-build",id:"how-to-build",isDocsHomePage:!1,title:"How to build Apache APISIX",description:"\x3c!--",source:"@site/docs/apisix/how-to-build.md",slug:"/how-to-build",permalink:"/docs/apisix/how-to-build",editUrl:"https://github.com/apache/apisix/edit/master/docs/en/latest/how-to-build.md",version:"current",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/apisix/getting-started"},next:{title:"batch-requests",permalink:"/docs/apisix/plugins/batch-requests"}},s=[{value:"1. Install dependencies",id:"1-install-dependencies",children:[]},{value:"2. Install Apache APISIX",id:"2-install-apache-apisix",children:[{value:"Installation via source release",id:"installation-via-source-release",children:[]},{value:"Installation via RPM package (CentOS 7)",id:"installation-via-rpm-package-centos-7",children:[]},{value:"Installation via Luarocks (macOS not supported)",id:"installation-via-luarocks-macos-not-supported",children:[]}]},{value:"3. Manage (start/stop) APISIX Server",id:"3-manage-startstop-apisix-server",children:[]},{value:"4. Test",id:"4-test",children:[{value:"Troubleshoot Testing",id:"troubleshoot-testing",children:[]}]},{value:"5. Update Admin API token to protect Apache APISIX",id:"5-update-admin-api-token-to-protect-apache-apisix",children:[]},{value:"6. Build OpenResty for APISIX",id:"6-build-openresty-for-apisix",children:[]}],c={toc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"1-install-dependencies"},"1. Install dependencies"),Object(r.b)("p",null,"The runtime environment for Apache APISIX requires Nginx and etcd."),Object(r.b)("p",null,"So before installation, please follow the different operating systems ",Object(r.b)("a",{parentName:"p",href:"/docs/apisix/install-dependencies"},"install Dependencies"),"."),Object(r.b)("h2",{id:"2-install-apache-apisix"},"2. Install Apache APISIX"),Object(r.b)("p",null,"You can install Apache APISIX in a variety of ways, including source code packages, Docker, and Luarocks."),Object(r.b)("h3",{id:"installation-via-source-release"},"Installation via source release"),Object(r.b)("p",null,"You need to download the Apache source release first:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ mkdir apisix-2.5\n$ wget https://downloads.apache.org/apisix/2.5/apache-apisix-2.5-src.tgz\n$ tar zxvf apache-apisix-2.5-src.tgz -C apisix-2.5\n")),Object(r.b)("p",null,"Install the Lua libraries that the runtime depends on:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"cd apisix-2.5\nmake deps\n")),Object(r.b)("h3",{id:"installation-via-rpm-package-centos-7"},"Installation via RPM package (CentOS 7)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"sudo yum install -y https://github.com/apache/apisix/releases/download/2.5/apisix-2.5-0.x86_64.rpm\n")),Object(r.b)("h3",{id:"installation-via-luarocks-macos-not-supported"},"Installation via Luarocks (macOS not supported)"),Object(r.b)("p",null,"Execute the following command in the terminal to complete the installation of APISIX (only recommended for developers):"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Install the code for the master branch via a script")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},'sudo sh -c "$(curl -fsSL https://raw.githubusercontent.com/apache/apisix/master/utils/install-apisix.sh)"\n')),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Install the specified version via Luarocks:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"# Install version 2.5\nsudo luarocks install --lua-dir=/path/openresty/luajit apisix 2.5\n\n# old luarocks not support the `lua-dir` parameter, you can remove this option\nsudo luarocks install apisix 2.5\n")),Object(r.b)("h2",{id:"3-manage-startstop-apisix-server"},"3. Manage (start/stop) APISIX Server"),Object(r.b)("p",null,"We can start the APISIX server by command ",Object(r.b)("inlineCode",{parentName:"p"},"make run")," in APISIX home folder,\nor we can stop APISIX server by command ",Object(r.b)("inlineCode",{parentName:"p"},"make stop"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},"# init nginx config file and etcd\n$ make init\n\n# start APISIX server\n$ make run\n\n# stop APISIX server\n$ make stop\n\n# more actions find by `help`\n$ make help\nMakefile rules:\n\n    help:             Show Makefile rules\n    deps:             Installation dependencies\n    utils:            Installation tools\n    lint:             Lint Lua source code\n    init:             Initialize the runtime environment\n    run:              Start the apisix server\n    stop:             Stop the apisix server\n    verify:           Verify the configuration of apisix server\n    clean:            Remove generated files\n    reload:           Reload the apisix server\n    install:          Install the apisix (only for luarocks)\n    test:             Run the test case\n    license-check:    Check Lua source code for Apache License\n")),Object(r.b)("p",null,"Environment variable can be used to configure APISIX. Please take a look at ",Object(r.b)("inlineCode",{parentName:"p"},"conf/config.yaml")," to\nsee how to do it."),Object(r.b)("h2",{id:"4-test"},"4. Test"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Install perl's package manager ",Object(r.b)("inlineCode",{parentName:"li"},"cpanminus")," first"),Object(r.b)("li",{parentName:"ol"},"Then install ",Object(r.b)("inlineCode",{parentName:"li"},"test-nginx"),"'s dependencies via ",Object(r.b)("inlineCode",{parentName:"li"},"cpanm"),":\uff1a",Object(r.b)("inlineCode",{parentName:"li"},"sudo cpanm --notest Test::Nginx IPC::Run > build.log 2>&1 || (cat build.log && exit 1)")),Object(r.b)("li",{parentName:"ol"},"Clone source code\uff1a",Object(r.b)("inlineCode",{parentName:"li"},"git clone https://github.com/iresty/test-nginx.git"),". Note that we should use our fork."),Object(r.b)("li",{parentName:"ol"},"Load the ",Object(r.b)("inlineCode",{parentName:"li"},"test-nginx")," library with perl's ",Object(r.b)("inlineCode",{parentName:"li"},"prove")," command and run the test cases in the ",Object(r.b)("inlineCode",{parentName:"li"},"/t")," directory:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Set PERL5LIB for perl module: ",Object(r.b)("inlineCode",{parentName:"li"},"export PERL5LIB=.:$PERL5LIB")),Object(r.b)("li",{parentName:"ul"},"Run the test cases: ",Object(r.b)("inlineCode",{parentName:"li"},"make test")),Object(r.b)("li",{parentName:"ul"},"To set the path of nginx to run the test cases: ",Object(r.b)("inlineCode",{parentName:"li"},"TEST_NGINX_BINARY=/usr/local/bin/openresty prove -Itest-nginx/lib -r t"))))),Object(r.b)("h3",{id:"troubleshoot-testing"},"Troubleshoot Testing"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Set Nginx Path")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"If you run in to an issue ",Object(r.b)("inlineCode",{parentName:"li"},'Error unknown directive "lua_package_path" in /API_ASPIX/apisix/t/servroot/conf/nginx.conf'),"\nmake sure to set openresty as default nginx. And export the path as below.")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"export PATH=/usr/local/openresty/nginx/sbin:$PATH",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Linux default installation path:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"export PATH=/usr/local/openresty/nginx/sbin:$PATH"))),Object(r.b)("li",{parentName:"ul"},"OSx default installation path via homebrew:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"export PATH=/usr/local/opt/openresty/nginx/sbin:$PATH")))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Run Individual Test Cases")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Use the following command to run test cases constrained to a file:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"prove -Itest-nginx/lib -r t/plugin/openid-connect.t")))),Object(r.b)("h2",{id:"5-update-admin-api-token-to-protect-apache-apisix"},"5. Update Admin API token to protect Apache APISIX"),Object(r.b)("p",null,"Changes the ",Object(r.b)("inlineCode",{parentName:"p"},"apisix.admin_key")," in the file ",Object(r.b)("inlineCode",{parentName:"p"},"conf/config.yaml")," and restart the service.\nHere is an example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-yaml"},'apisix:\n  # ... ...\n  admin_key\n    -\n      name: "admin"\n      key: abcdefghabcdefgh\n      role: admin\n')),Object(r.b)("p",null,"When calling the Admin API, ",Object(r.b)("inlineCode",{parentName:"p"},"key")," can be used as a token."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ curl http://127.0.0.1:9080/apisix/admin/routes?api_key=abcdefghabcdefgh -i\nHTTP/1.1 200 OK\nDate: Fri, 28 Feb 2020 07:48:04 GMT\nContent-Type: text/plain\n... ...\n{"node":{...},"action":"get"}\n\n$ curl http://127.0.0.1:9080/apisix/admin/routes?api_key=abcdefghabcdefgh-invalid -i\nHTTP/1.1 401 Unauthorized\nDate: Fri, 28 Feb 2020 08:17:58 GMT\nContent-Type: text/html\n... ...\n{"node":{...},"action":"get"}\n')),Object(r.b)("h2",{id:"6-build-openresty-for-apisix"},"6. Build OpenResty for APISIX"),Object(r.b)("p",null,"Some features require you to build OpenResty with extra Nginx modules.\nIf you need those features, you can build OpenResty with\n",Object(r.b)("a",{parentName:"p",href:"https://raw.githubusercontent.com/api7/apisix-build-tools/master/build-apisix-openresty.sh"},"this build script"),"."))}p.isMDXComponent=!0},265:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),p=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),b=p(n),d=a,m=b["".concat(l,".").concat(d)]||b[d]||u[d]||r;return n?i.a.createElement(m,o(o({ref:t},c),{},{components:n})):i.a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);