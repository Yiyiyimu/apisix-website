(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{131:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(8),c=(n(0),n(265)),o={title:"Benchmark"},s={unversionedId:"benchmark",id:"benchmark",isDocsHomePage:!1,title:"Benchmark",description:"\x3c!--",source:"@site/docs/apisix/benchmark.md",slug:"/benchmark",permalink:"/docs/apisix/benchmark",editUrl:"https://github.com/apache/apisix/edit/master/docs/en/latest/benchmark.md",version:"current",sidebar:"docs",previous:{title:"HTTPS",permalink:"/docs/apisix/https"},next:{title:"Debug Function",permalink:"/docs/apisix/debug-function"}},i=[{value:"Benchmark Environments",id:"benchmark-environments",children:[]},{value:"Benchmark Test for reverse proxy",id:"benchmark-test-for-reverse-proxy",children:[]},{value:"Benchmark Test for reverse proxy, enabled 2 plugins",id:"benchmark-test-for-reverse-proxy-enabled-2-plugins",children:[]}],l={toc:i};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"benchmark-environments"},"Benchmark Environments"),Object(c.b)("p",null,"n1-highcpu-8 (8 vCPUs, 7.2 GB memory) on Google Cloud"),Object(c.b)("p",null,"But we ",Object(c.b)("strong",{parentName:"p"},"only")," used 4 cores to run APISIX, and left 4 cores for system and ",Object(c.b)("a",{parentName:"p",href:"https://github.com/wg/wrk"},"wrk"),",\nwhich is the HTTP benchmarking tool."),Object(c.b)("h3",{id:"benchmark-test-for-reverse-proxy"},"Benchmark Test for reverse proxy"),Object(c.b)("p",null,"Only used APISIX as the reverse proxy server, with no logging, limit rate, or other plugins enabled,\nand the response size was 1KB."),Object(c.b)("h4",{id:"qps"},"QPS"),Object(c.b)("p",null,"The x-axis means the size of CPU core, and the y-axis is QPS."),Object(c.b)("p",null,Object(c.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/benchmark-1.jpg",alt:"benchmark-1"})),Object(c.b)("h4",{id:"latency"},"Latency"),Object(c.b)("p",null,"Note the y-axis latency in ",Object(c.b)("strong",{parentName:"p"},"microsecond(\u03bcs)")," not millisecond."),Object(c.b)("p",null,Object(c.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/latency-1.jpg",alt:"latency-1"})),Object(c.b)("h4",{id:"flame-graph"},"Flame Graph"),Object(c.b)("p",null,"The result of Flame Graph:\n",Object(c.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/flamegraph-1.jpg",alt:"flamegraph-1"})),Object(c.b)("p",null,"And if you want to run the benchmark test in your machine, you should run another Nginx to listen 80 port."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "methods": ["GET"],\n    "uri": "/hello",\n    "upstream": {\n        "type": "roundrobin",\n        "nodes": {\n            "127.0.0.1:80": 1,\n            "127.0.0.2:80": 1\n        }\n    }\n}\'\n')),Object(c.b)("p",null,"then run wrk:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-shell"},"wrk -d 60 --latency http://127.0.0.1:9080/hello\n")),Object(c.b)("h3",{id:"benchmark-test-for-reverse-proxy-enabled-2-plugins"},"Benchmark Test for reverse proxy, enabled 2 plugins"),Object(c.b)("p",null,"Only used APISIX as the reverse proxy server, enabled the limit rate and prometheus plugins,\nand the response size was 1KB."),Object(c.b)("h4",{id:"qps-1"},"QPS"),Object(c.b)("p",null,"The x-axis means the size of CPU core, and the y-axis is QPS."),Object(c.b)("p",null,Object(c.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/benchmark-2.jpg",alt:"benchmark-2"})),Object(c.b)("h4",{id:"latency-1"},"Latency"),Object(c.b)("p",null,"Note the y-axis latency in ",Object(c.b)("strong",{parentName:"p"},"microsecond(\u03bcs)")," not millisecond."),Object(c.b)("p",null,Object(c.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/latency-2.jpg",alt:"latency-2"})),Object(c.b)("h4",{id:"flame-graph-1"},"Flame Graph"),Object(c.b)("p",null,"The result of Flame Graph:\n",Object(c.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/apache/apisix/master/docs/assets/images/flamegraph-2.jpg",alt:"flamegraph-2"})),Object(c.b)("p",null,"And if you want to run the benchmark test in your machine, you should run another Nginx to listen 80 port."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-shell"},'curl http://127.0.0.1:9080/apisix/admin/routes/1 -H \'X-API-KEY: edd1c9f034335f136f87ad84b625c8f1\' -X PUT -d \'\n{\n    "methods": ["GET"],\n    "uri": "/hello",\n    "plugins": {\n        "limit-count": {\n            "count": 999999999,\n            "time_window": 60,\n            "rejected_code": 503,\n            "key": "remote_addr"\n        },\n        "prometheus":{}\n    },\n    "upstream": {\n        "type": "roundrobin",\n        "nodes": {\n            "127.0.0.1:80": 1,\n            "127.0.0.2:80": 1\n        }\n    }\n}\'\n')),Object(c.b)("p",null,"then run wrk:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-shell"},"wrk -d 60 --latency http://127.0.0.1:9080/hello\n")))}p.isMDXComponent=!0},265:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,h=b["".concat(o,".").concat(m)]||b[m]||u[m]||c;return n?a.a.createElement(h,s(s({ref:t},l),{},{components:n})):a.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<c;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);